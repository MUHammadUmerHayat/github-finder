{"version":3,"sources":["context/types.js","components/layout/spinner.gif","context/github/GithubState.js","context/github/githubReducer.js","context/alert/alertContext.js","components/users/Search.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/pages/Home.js","components/pages/About.js","components/pages/NotFound.js","components/layout/NavBar.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/layout/Alert.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","serviceWorker.js","index.js","context/github/githubContext.js"],"names":["__webpack_require__","d","__webpack_exports__","SEARCH_USERS","GET_USER","GET_REPOS","SET_LOADING","CLEAR_USERS","CLEAR_USER","SET_ALERT","REMOVE_ALERT","module","exports","p","githubCliendId","githubClientSecret","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","searchUsers","_ref","Object","_home_osama_Desktop_github_finder_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_osama_Desktop_github_finder_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","text","res","wrap","_context","prev","next","setLoading","axios","get","concat","sent","dispatch","type","payload","data","items","stop","_x","apply","this","arguments","getUser","_ref2","_callee2","username","_context2","_x2","getUserRepos","_ref3","_callee3","_context3","_x3","_useReducer","useReducer","githubReducer","users","user","repos","loading","_useReducer2","_home_osama_Desktop_github_finder_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_githubContext__WEBPACK_IMPORTED_MODULE_5__","Provider","value","clearUsers","clearUser","children","action","_objectSpread","alertContext","createContext","Search","githubContext","useContext","GithubContext","AlertContext","setAlert","_useState","useState","_useState2","slicedToArray","setText","react_default","onSubmit","e","preventDefault","className","name","placeholder","onChange","target","length","onClick","UserItem","_ref$user","login","avatar_url","src","alt","style","width","react_router_dom","to","Spinner","react","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","layout_Spinner","map","users_UserItem","key","id","Home","users_Search","users_Users","About","NotFound","NavBar","icon","title","defaultProps","RepoItem","repo","href","html_url","Repos","repos_RepoItem","User","match","useLayoutEffect","params","location","company","bio","blog","followers","following","public_repos","public_gists","hireable","repos_Repos","Alert","alert","msg","alertReducer","AlertState","alert_alertContext","setTimeout","App","alert_AlertState","layout_NavBar","layout_Alert","react_router","exact","path","component","render","users_User","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.cfe024f8.chunk.js","sourcesContent":["export const SEARCH_USERS   = 'SEARCH_USERS';\nexport const GET_USER       = 'GET_USER';\nexport const GET_REPOS      = 'GET_REPOS';\nexport const SET_LOADING    = 'SET_LOADING';\nexport const CLEAR_USERS    = 'CLEAR_USERS';\nexport const CLEAR_USER     = 'CLEAR_USER';\nexport const SET_ALERT      = 'SET_ALERT';\nexport const REMOVE_ALERT   = 'REMOVE_ALERT';","module.exports = __webpack_public_path__ + \"static/media/spinner.75ae2ba2.gif\";","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport githubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    GET_USER,\n    GET_REPOS,\n    SET_LOADING,\n    CLEAR_USERS,\n    CLEAR_USER\n} from '../types';\n\n// set environment variables for production and development\nlet githubCliendId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production') {\n    githubCliendId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n    githubCliendId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.GITHUB_CLIENT_SECRET;\n}\n\n// GithubState component\nconst GithubState = props => {\n\n    // initial state\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false,\n    };\n\n    // Search users\n    const searchUsers = async text => {\n        setLoading();\n\n        const res = await axios.get(\n            `https://api.github.com/search/users?q=${text}&client_id=${\n            githubCliendId}&client_secret=${githubClientSecret}`);\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        });\n    }\n\n    // Get user\n    const getUser = async username => {\n        \n        setLoading();\n        const res = await axios.get(\n            `https://api.github.com/users/${username}?client_id=${\n            githubCliendId}&client_secret=${githubClientSecret}`);\n\n        await dispatch({\n            type: GET_USER,\n            payload: res.data\n        });\n\n    };\n\n    // Get repos\n    const getUserRepos = async username => {\n    \n        const res = await axios.get(\n          `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n          githubCliendId}&client_secret=${githubClientSecret}`);\n    \n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n      }\n\n    // Clear users\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n    // Clear user\n    const clearUser = () => dispatch({ type: CLEAR_USER });\n\n    // Set loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    // reducer\n    const [state, dispatch] = useReducer(githubReducer, initialState);\n\n    return (\n        <GithubContext.Provider\n            value={{\n                users: state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading,\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                getUser: getUser,\n                clearUser: clearUser,\n                getUserRepos: getUserRepos\n            }}\n        >\n            {props.children}\n        </GithubContext.Provider>\n    );\n};\n\nexport default GithubState;","import {\n    SEARCH_USERS,\n    GET_USER,\n    GET_REPOS,\n    SET_LOADING,\n    CLEAR_USERS,\n    CLEAR_USER,\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            };            \n        case SEARCH_USERS:\n            return {\n                ...state,\n                users: action.payload,\n                loading: false\n            };\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false\n            };\n        case CLEAR_USER:\n            return {\n                ...state,\n                user: {},\n                repos: []\n            };\n        case CLEAR_USERS:\n            return {\n                ...state, \n                users: []\n            };\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: action.payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n};","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import React, { useState, useContext } from 'react'\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Search = () => {\n\n    // use github context\n    const githubContext = useContext(GithubContext);\n\n    // use alert context\n    const alertContext = useContext(AlertContext);\n\n    // destructure github context\n    const { searchUsers, clearUsers, users } = githubContext;\n\n    // destructure alert context\n    const { setAlert } = alertContext;\n\n    const [text, setText] = useState('');\n\n    const onChange = e => setText(e.target.value);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (text === '') {\n            setAlert('Please enter something', 'light');\n        } else {\n            searchUsers(text);\n            setText('');\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className='form'>\n                <input\n                    type='text'\n                    name='text'\n                    placeholder='Search users...'\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type='submit'\n                    value='Search'\n                    className='btn btn-dark btn-block'\n                />\n            </form>\n            {users.length > 0  && <button onClick={clearUsers} className='btn btn-light btn-block'>Clear</button>}\n        </div>\n    )\n\n}\n\nexport default Search;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\nconst UserItem = ({ user: { login, avatar_url } }) => {\n\n    return (\n        <div className='card text-center'>\n            <img\n                src={avatar_url}\n                alt=''\n                className='round-img'\n                style={{ width: '60px' }}\n            />\n            <h3>{login}</h3>\n            <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\n                More\n            </Link>\n        </div>\n    )\n}\n\nUserItem.propTypes = {\n    user: PropTypes.object.isRequired\n}\n\nexport default UserItem;","import React, { Fragment } from 'react'\nimport spinner from './spinner.gif';\n\nconst Spinner = () => {\n    return (\n        <Fragment>\n            <img\n                src={spinner}\n                alt='Loading...'\n                style={{ width: '50px', margin: 'auto', display: 'block' }}\n            />\n        </Fragment>\n    )\n}\n\nexport default Spinner;","import React, { useContext } from 'react'\nimport GithubContext from '../../context/github/githubContext';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\n\nconst Users = () => {\n\n    // use github context\n    const githubContext = useContext(GithubContext);\n\n    // destructure github context\n    const { users, loading } = githubContext; \n\n    if(loading) {\n        return <Spinner />\n    } else {\n        return (\n            <div style={userStyle}>\n                {users.map(user => \n                <UserItem key={user.id} user={user} />\n                )}\n            </div>\n        );\n    }     \n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nexport default Users","import React, { Fragment } from 'react'\nimport Search from '../users/Search';\nimport Users from '../users/Users';\n\nconst Home = () => {\n    return (\n        <Fragment>\n            <Search />\n            <Users />\n        </Fragment>\n    )\n}\n\nexport default Home;\n","import React, { Fragment } from 'react'\n\nconst About = () => {\n    return (\n        <Fragment>\n            <h1>About this app</h1>\n            <p>App to search GitHub users</p>\n            <p>Version 1.0.0</p>\n        </Fragment>\n    )\n}\n\nexport default About;","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>Not Found</h1>\n            <p className='lead'>The page you are looking for does not exists...</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n\nconst NavBar = (props) => {\n    return (\n        <nav className='navbar bg-primary'>\n            <h1><i className={props.icon}></i> {props.title}</h1>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about'>About</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\n\n// default props\nNavBar.defaultProps = {\n  title: 'GitHub Finder',\n  icon: 'fab fa-github'  \n}\n\n// propTypes\nNavBar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired\n}\n\nexport default NavBar","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RepoItem = ({ repo }) => {\n    return (\n        <div className='card'>\n            <h3>\n                <a href={repo.html_url}>{repo.name}</a>\n            </h3>\n        </div>\n    )\n}\n\nRepoItem.propTypes = {\n    repo: PropTypes.object.isRequired\n}\n\nexport default RepoItem;","import React from 'react'\nimport RepoItem from './RepoItem';\nimport PropTypes from 'prop-types'\n\nconst Repos = ({ repos }) => repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n\nRepos.propTypes = {\n    repos: PropTypes.array.isRequired\n}\n\nexport default Repos;\n","import React, { Fragment, useContext, useLayoutEffect } from 'react'\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ match }) => {\n\n    // use github context\n    const githubContext = useContext(GithubContext);\n    \n    // destructure github context\n    const { user, getUser, clearUser, repos, getUserRepos, loading } = githubContext;\n\n    useLayoutEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        return () => clearUser();\n        // eslint-disable-next-line        \n    }, []);\n    \n    if (loading) return <Spinner />\n    \n    // destructure user\n    const {\n        name,\n        avatar_url,\n        location,\n        company,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable\n    } = user;    \n\n\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>\n                Back to Search\n                </Link>\n            Hireable:{' '}\n            {\n                hireable ?\n                    <i className='fas fa-check text-success'></i>\n                    :\n                    <i className='fas fa-times-circle text-danger'></i>\n            }\n            <div className='card grid-2'>\n                <div className='all-center'>\n                    <img\n                        src={avatar_url}\n                        alt=''\n                        className='round-img'\n                        style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n                </div>\n                <div>\n                    {\n                        bio &&\n                        <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>\n                    }\n                    <a href={html_url} className='btn btn-dark my-1'>\n                        Visit GitHub Profile\n                        </a>\n                    <ul>\n                        {\n                            login && <li>\n                                <strong>Username: </strong> {login}\n                            </li>\n                        }\n                        {\n                            company && <li>\n                                <strong>Company: </strong> {company}\n                            </li>\n                        }\n                        {\n                            blog && <li>\n                                <strong>Website: </strong> {blog}\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </div>\n            <div className='card text-center'>\n                <div className='badge badge-primary'>Followers: {followers}</div>\n                <div className='badge badge-success'>Following: {following}</div>\n                <div className='badge badge-light'>Public Repos: {public_repos}</div>\n                <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n            </div>\n\n            <Repos repos={repos} />\n        </Fragment>\n    )\n}\n\nexport default User;","import React, { useContext } from 'react'\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alert = () => {\n\n    // use alert context\n    const alertContext = useContext(AlertContext);\n    \n    // destructure alert context\n    const { alert } = alertContext;\n\n    return (\n        alert !== null && (\n            <div className={`alert alert-${alert.type}`}>\n                <i className='fas fa-info-circle'></i> {alert.msg}\n            </div>\n        )\n    );\n}\n\nexport default Alert;","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SET_ALERT:\n            return action.payload;\n        case REMOVE_ALERT:\n            return null;\n        default:\n            return state\n    }\n};","import React, { useReducer } from 'react'\nimport alertReducer from './alertReducer'\nimport AlertContext from './alertContext';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n\n    // initial state\n    const initialState = null;\n\n    // use reducer\n    const [state, dispatch] = useReducer(alertReducer, initialState);\n\n    // set alert\n    const setAlert = (msg, type) => {\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, type }\n        });\n\n        setTimeout(() => {\n            dispatch({ type: REMOVE_ALERT});\n        }, 5000);\n    }\n\n    return (\n        <AlertContext.Provider\n            value={{\n                alert: state,\n                setAlert: setAlert\n            }}\n        >\n            {props.children}\n        </AlertContext.Provider>\n    );\n}\n\nexport default AlertState\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport NavBar from './components/layout/NavBar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState'\n\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div>\n            <NavBar title='Github Finder' icon='fab fa-github' />\n            <div className='container'>\n              <Alert />\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' render={props => (\n                  <User\n                    {...props}\n                  />\n                )}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createContext } from 'react';\n\nconst githubContext = createContext();\n\nexport default githubContext;"],"sourceRoot":""}